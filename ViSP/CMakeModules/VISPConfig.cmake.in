#############################################################################
#
# $Id: VISPConfig.cmake.in,v 1.10 2006-11-23 17:25:41 fspindle Exp $
#
# Copyright (C) 1998-2006 Inria. All rights reserved.
#
# This software was developed at:
# IRISA/INRIA Rennes
# Projet Lagadic
# Campus Universitaire de Beaulieu
# 35042 Rennes Cedex
# http://www.irisa.fr/lagadic
#
# This file is part of the ViSP toolkit.
#
# This file may be distributed under the terms of the Q Public License
# as defined by Trolltech AS of Norway and appearing in the file
# LICENSE included in the packaging of this file.
#
# Licensees holding valid ViSP Professional Edition licenses may
# use this file in accordance with the ViSP Commercial License
# Agreement provided with the Software.
#
# This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
# WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
#
# Contact visp@irisa.fr if any conditions of this licensing are
# not clear to you.
#
# Description:
# cmake PackageConfig file for VISP
#
# Typical usage in user project:
#   FIND_PACKAGE(VISP)
#   IF (VISP_FOUND)
#     INCLUDE(${VISP_USE_FILE})
#   ENDIF (VISP_FOUND)
#
# Authors:
# Fabien Spindler
#
#############################################################################

# Tell the user project where to find ViSP headers and third party
# headers used to compile ViSP
SET(VISP_INCLUDE_DIR
  "@CMAKE_INSTALL_PREFIX@/include"
  "@VISP_EXTERN_INCLUDE_DIR@" )

# Tell the user project where to find ViSP libraries and third party
# libraries used to compile ViSP
SET(VISP_LINK_DIRECTORIES 
  "@CMAKE_INSTALL_PREFIX@/lib" 
  "@VISP_EXTERN_LINK_DIR@"
  )

# Tell the user project where to find where to find ViSP build settings
SET(VISP_BUILD_SETTINGS_FILE 
  "@CMAKE_INSTALL_PREFIX@/lib/VISPBuildSettings.cmake"
  )

# Tell the user project where to find where to find ViSP dependencies
INCLUDE("@CMAKE_INSTALL_PREFIX@/lib/VISPLibraryDepends.cmake")

# export source dir for doxygen
SET(VISP_SOURCE_DIR "@VISP_SOURCE_DIR@")

# set the (one) library child projects can use (if they dont want to solve dependencies theirselves)
SET(VISP_LIBRARIES @VISP_INTERN_LIBS@ @VISP_EXTERN_LIBS@)

# where to find the USE file to be used by user project
SET(VISP_USE_FILE
  "@CMAKE_INSTALL_PREFIX@/lib/VISPUse.cmake"
  )

IF(BUILD_TEST_COVERAGE)
  # Add build options for test coverage. Currently coverage is only supported
  # on gcc compiler 
  # Because using -fprofile-arcs with shared lib can cause problems like:
  # hidden symbol `__bb_init_func', we add this option only for static 
  # library build
  SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -ftest-coverage -fprofile-arcs")
ENDIF(BUILD_TEST_COVERAGE)


#
# Remember VISP' third party libs configuration: 
#

SET(VISP_HAVE_X11       "@VISP_HAVE_X11@")
SET(VISP_HAVE_GTK       "@VISP_HAVE_GTK@")
SET(VISP_HAVE_GSL       "@VISP_HAVE_GSL@")
SET(VISP_HAVE_COIN      "@VISP_HAVE_COIN@")
SET(VISP_HAVE_QT        "@VISP_HAVE_QT@")
SET(VISP_HAVE_SOQT      "@VISP_HAVE_SOQT@")
SET(VISP_HAVE_DC1394_1  "@VISP_HAVE_DC1394_1@")
SET(VISP_HAVE_DC1394_2  "@VISP_HAVE_DC1394_2@")
SET(VISP_HAVE_CFOX      "@VISP_HAVE_CFOX@")
SET(VISP_HAVE_V4L2      "@VISP_HAVE_V4L2@")
SET(VISP_HAVE_ICCOMP    "@VISP_HAVE_ICCOMP@")
SET(VISP_HAVE_ITIFG8    "@VISP_HAVE_ITIFG8@")
SET(VISP_HAVE_DIRECTSHOW "@VISP_HAVE_DIRECTSHOW@")
SET(VISP_HAVE_AFMA4     "@VISP_HAVE_AFMA4@")
SET(VISP_HAVE_AFMA6     "@VISP_HAVE_AFMA6@")
SET(VISP_HAVE_BICLOPS   "@VISP_HAVE_BICLOPS@")
SET(VISP_HAVE_PTU46     "@VISP_HAVE_PTU46@")

IF(VISP_HAVE_AFMA4 OR  VISP_HAVE_AFMA6)
 ADD_DEFINITIONS(-DBT1003) 
ENDIF(VISP_HAVE_AFMA4 OR  VISP_HAVE_AFMA6)
