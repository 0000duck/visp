SHELL=/bin/sh

OS		= @OS@
SUFFIX		= @SUFFIX@
PACKAGE_TARNAME	= @PACKAGE_TARNAME@
HOSTNAME	= @ac_hostname@
PROJECT_HOME	= @PROJECT_HOME@
PROJECT_DIR_LIB	= $(PROJECT_HOME)/lib
PROJECT_DIR_OBJ	= $(PROJECT_HOME)/.obj
PROJECT_DIR_DEP	= $(PROJECT_HOME)/.dep
PROJECT_OBJ_PATH= $(PROJECT_DIR_OBJ)/$(HOSTNAME)$(SUFFIX)
PROJECT_DEP_PATH= $(PROJECT_DIR_DEP)/$(HOSTNAME)$(SUFFIX)
PROJECT_LIB_PATH= $(PROJECT_DIR_LIB)

LIB		= $(PROJECT_LIB_PATH)/lib@PROJECT_LIBNAME@.a

.DELETE_ON_ERROR:

all install: src example FORCE

include: directory FORCE
	cd include; $(MAKE) install

src: include directory FORCE
	cd src; $(MAKE) install
	$(MAKE) lib-link

example: src directory FORCE
	cd example; $(MAKE) install

directory:
	@if [ ! -d bin ] ;\
	then \
		echo "*" ; \
		echo "* Creation of the bin directory..." ; \
		echo "*" ; \
		mkdir bin ; \
	fi ;
	@if [ ! -d lib ] ;\
	then \
		echo "*" ; \
		echo "* Creation of the lib directory..." ; \
		echo "*" ; \
		mkdir lib ; \
	fi ;

clean:
	rm -f *% */*%
	rm -f *~ */*~
	cd include; $(MAKE) $@
	cd src; $(MAKE) $@
	cd example; $(MAKE) $@
	@for i in `find -type f -name *~ -print | sort` ; do\
		rm -f $$i;\
		echo "rm -f " $$i;\
	done
	@for i in `find -type f -name tca.* -print | sort` ; do\
		rm -f $$i;\
		echo "rm -f " $$i;\
	done
	@for i in `find -type d -name pchdir -print | sort` ; do\
		rm -fr $$i;\
		echo "rm -fr " $$i;\
	done
	@for i in `find -type f -name *.d -print | sort` ; do\
		rm -f $$i;\
		echo "rm -f " $$i;\
	done
	@for i in `find -type f -name .inslog2 -print | sort` ; do\
		rm -f $$i;\
		echo "rm -f " $$i;\
	done
	@for i in `find -type f -name tca.* -print | sort` ; do\
		rm -f $$i;\
		echo "rm -f " $$i;\
	done
	@for i in `find -type d -name pchdir -print | sort` ; do\
		rm -fr $$i;\
		echo "rm -fr " $$i;\
	done
	@for i in `find -type f -name *.d -print | sort` ; do\
		rm -f $$i;\
		echo "rm -f " $$i;\
	done

uninstall:
	$(MAKE) clean;
	cd include; $(MAKE) $@
	cd src; $(MAKE) $@
	cd example; $(MAKE) $@
	rm -f $(PROJECT_DEP_PATH)/*.P
	rm -f $(PROJECT_OBJ_PATH)/*.o
	rm -rf lib
	rm -rf bin
	rm -rf doc/html
	rm -f doc/warning.log
	rm -f config.log config.status
	rm -rf autom4te.cache
	@for i in `find -type f -name Makefile.in -print | sort` ; do\
		filetoremove=`echo "$$i" | sed -e "s;Makefile.in;Makefile;g"`;\
		rm -f $${filetoremove};\
		echo "rm -f " $${filetoremove};\
	done
	@for i in `find -type f -name build.mk.in -print | sort` ; do\
		filetoremove=`echo "$$i" | sed -e "s;build.mk.in;build.mk;g"`;\
		rm -f $${filetoremove};\
		echo "rm -f " $${filetoremove};\
	done
	@for i in `find -type f -name config-doxygen.in -print | sort` ; do\
		filetoremove=`echo "$$i" | sed -e "s;config-doxygen.in;config-doxygen;g"`;\
		rm -f $${filetoremove};\
		echo "rm -f " $${filetoremove};\
	done
	@for i in `find -type f -name .depend -print | sort` ; do\
		rm -f $$i;\
		echo "rm -f " $$i;\
	done
	@for i in `find -type f -name *.exe -print | sort` ; do\
		rm -f $$i;\
		echo "rm -f " $$i;\
	done
	@for i in `find -type f -name gmon.out -print | sort` ; do\
		rm -f $$i;\
		echo "rm -f " $$i;\
	done


html-doc:
	@echo "html documentation creation..."
	cd doc; doxygen config-doxygen

lib-link:
	rm -f $(PROJECT_LIB_PATH)/lib$(PACKAGE_TARNAME)$(SUFFIX).a
	ln -s $(LIB) $(PROJECT_LIB_PATH)/lib$(PACKAGE_TARNAME)$(SUFFIX).a

group-access:
	@echo "Changing group access in process..."
	chmod -R g+rw .
	find . -type d -exec chmod g+rwx {} \;
	@for i in `find -type f -name *.exe -print | sort` ; do\
		chmod g+rwx $$i;\
		echo "chmod g+rwx" $$i;\
	done
	@echo "done."

FORCE:
