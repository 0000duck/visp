                            Use-ViSP-CMake
			    Release  1.0.1

         Copyright Projet Lagadic / IRISA-INRIA Rennes, 2007
                  www: http://www.irisa.fr/lagadic



This project is using the CMake build system and shows how to use ViSP
(http://www.irisa.fr/lagadic/visp) as a third party library.

CMake is a complete stand-alone platform-independant build-system 
replacing autotools (autoconf/autoheader/automake/libtools) completely. 
It depends just on installed cmake (tested with version 2.2.x or more recent 
versions). See http://www.cmake.org for details.

USAGE: 
=====

1. Install the newest cmake from www.cmake.org
2. Check out/install ViSP
   See http://www.irisa.fr/lagadic/visp/download.html
   See http://www.irisa.fr/lagadic/visp/install.html
3. Check out Use-ViSP-CMake source code from Inria's forge web site
   http://gforge.inria.fr/frs/?group_id=397
4. Build Use-ViSP-CMake

--- Build for Unix platforms ---
cd <Use-ViSP-CMake source dir>
mkdir ../Use-ViSP-CMake-build
cd ../Use-ViSP-CMake-build
ccmake ../Use-ViSP-CMake-build 

  Set ViSP_DIR variable to the location where ViSP library was
  installed. If you don't have change it while ViSP configuration, VISP_DIR
  has to be set to /usr/local/lib.

make
make html-doc

--- Build for WIN32 platforms --- 
Start CMake GUI.
Set "Where is the source code:" to C:/<Use-ViSP-CMake source dir>
Set "Where to build the binaries:" to C:/Use-ViSP-CMake-build

Press "Configure" button.

Select your configurator; for example "Visual Studio 7 .NET 2003".

An error message appears saying that ViSP is required to build the
project and inviting you to set ViSP location. On your convenience
press "OK" or "Cancel".

Set VISP_DIR (actually set to VISP_DIR-NOTFOUND) to the path where
libvisp.dll or libvisp.lib was build; for example to C:/ViSP/ViSP-build/lib

Press "Configure" button.
Press "Configure" button.
Press "OK" button.

CMake GUI exits automaticaly after this stage.

Now Use-ViSP-CMake is configured. To build the project you have to start Visual
Studio and open C:/Use-ViSP-CMake-build/VISP.sln solution.


Project building
================

(1) compile:
> make
> or with Microsoft Visual Studio C++ (MSVC) build project ALL_BUILD

(2) clean:
> make clean
> or with Microsoft Visual Studio C++ (MSVC) build project CLEAN
The "make clean" target will remove files generated by the compiler and linker.

(3) documentation
> make html-doc
> or with Microsoft Visual Studio C++ (MSVC) build project html-doc
Generate doxygen html documentation in doc/html.

(4) install:
> make install
> or with Microsoft Visual Studio C++ (MSVC) build project INSTALL
Copy headers in ${CMAKE_INSTALL_PREFIX}/include/example
Copy library in ${CMAKE_INSTALL_PREFIX}/lib

(5) uninstall:  
> make uninstall
> or with Microsoft Visual Studio C++ (MSVC) build project UNINSTALL
Remove headers in ${CMAKE_INSTALL_PREFIX}/include/example
Remove library in ${CMAKE_INSTALL_PREFIX}/lib

Important Files:
===============

- CMakeLists.txt:
    Overall configuration file. Detect third party libraries (ViSP, ...).

- include/example/exConfig.h
    Project configuration. Generated by CMake during the project configuration
    from include/exConfig.h.cmake file 

- src/CMakeLists.txt:
    Build the project library in <Use-ViSP-CMake source dir>/lib.

- example/CMakeLists.txt:
    Build the binary myexample.

- CMakeHeaderFileList.cmake:
    The list of all the headers (*.h) or (*.t.cpp for templates) to copy
    in <Use-ViSP-CMake source dir>/include/example directory or to install in 
    <install prefix>/include/example

- CMakeSourceFileList.cmake:
    The list of all the sources (*.cpp) used to build the project library.


--
Fabien Spindler


