/**

\page tutorial-install-osx-homebrew Tutorial: Installation from source on OSX with Homebrew
\tableofcontents

In this tutorial you will learn how to install ViSP from source on OSX with Homebrew. These steps have been tested with Mac OS X 10.9.5 Mavericks and with 10.10.3 Yosemite. 

\note Concerning ViSP installation, we provide also other \ref tutorial.

\section install_osx_brew_setup Setup Homebrew

First, go to http://brew.sh to install Homebrew.

Next use homebrew to install additional software.

\code
$ brew update
$ brew install cmake
\endcode

\section install_osx_brew_setup_env Setup environment

You will need to add the next line to your ~/.bashrc or ~/.bash_profile to have Homebrew be at the front of the PATH. 
\code
export PATH=/usr/local/bin:$PATH
\endcode

In order for the above changes to take effect reopen the terminal or run this command:
\code
$ source ~/.bashrc
\endcode


\section install_osx_brew_required Install optional packages

ViSP is interfaced with several 3rd party libraries. The <a href="http://visp.inria.fr/software-architecture">complete list is provided here</a>. We recommend to install the following packages.

\subsection install_osx_brew_opencv Install OpenCV

\code
$ brew install homebrew/science/opencv3
\endcode

You can find OpenCV at:

\code
/usr/local/opt/opencv3
\endcode

Now to indicate to CMake where OpenCV is installed you will need to add the following line in your ~/.bashrc or ~/.bash_profile
\code
export OpenCV_DIR=/usr/local/opt/opencv3/share/OpenCV
\endcode
Note that OpenCV_DIR var gives now the location of OpenCVConfig.cmake file.

In order for the above changes to take effect reopen the terminal or run this command:
\code
$ source ~/.bashrc
\endcode

\subsection install_osx_brew_libxml2 Install libxml2

Just run the following instruction:
\code
$ brew install libxml2
\endcode

\subsection install_osx_brew_libdc1394 Install libdc1394

Just run the following instruction:
\code
$ brew install libdc1394
\endcode

\subsection install_osx_brew_gsl Install GSL

To install the Gnu Scientific Library (GSL), just run the following instruction:
\code
$ brew install gsl
\endcode

\subsection install_osx_brew_zbar Install zbar

To install the zbar library used in detection module for QR code detection, run:
\code
$ brew install zbar
\endcode



\section install_osx_brew_get_source Getting ViSP source code

There are different ways to get ViSP source code:

- You can download the <a href="http://visp.inria.fr/download">latest release</a> as a zip or a tarball. Once downloaded, uncompress the file using either
\code
tar xvzf visp-x.y.z.tar.gz 
\endcode
or
\code
unzip visp-x.y.z.zip
\endcode

- You can also download a <a href="http://visp.inria.fr/download#snapshot">daily snapshot</a>. Once downloaded, uncompress the file using
\code
tar xvzf visp-snapshot-yyyy-mm-dd.tar.gz
\endcode

- Or you get the cutting-edge ViSP from <a href="https://github.com/lagadic/visp">GitHub repository</a> repository using the following command
\code
$ git clone https://github.com/lagadic/visp.git
\endcode

We suppose now that ViSP source is in a directory denoted  \<source_dir\>, for example \c $HOME/visp

\section install_osx_brew_config Configuring ViSP from source

- Create first a directory denoted \<binary_dir\> where you want to build ViSP. This directory will contain generated Makefiles, object files, and output libraries and binaries.
\code
cd $HOME; mkdir visp-build-release
\endcode

- Enter the \<binary_dir\> and configure the build:
\code
cmake ../visp
\endcode
A more versatile way to configure the build is to use \c ccmake, the CMake GUI:
\code
ccmake ../visp
\endcode
The previous command allows to configure (just by pressing [c] key) the build in a more advanced way where some options could be easily turned On/Off. It allows also to see which are the 3rd party that will be used.
Then to generate the makefiles, just press [g] key in the ccmake gui.
Now we can build ViSP.

\section install_osx_brew_build Building ViSP from source

- To build ViSP proceed with:
\code
$ make -j4
\endcode

- To install ViSP proceed with:
\code
$ sudo make install
\endcode

- To build ViSP documentation, you have first to install Doxygen package:
\code
$ brew install doxygen
\endcode
Then you can proceed with:
\code
$ make -j4 visp_doc
\endcode

\section install_osx_brew_tips Tips and tricks

- After installation, you can remove installed material using
\code
$ sudo make uninstall
\endcode

- If you want to build only ViSP modules libraries
\code
$ make -j4 visp_modules
\endcode

- If you want to build a given module and all the dependencies
\code
$ make -j4 visp_<module_name>
\endcode
For example to build the model-based tracker module named mbt, run
\code
$ make -j4 visp_mbt
\endcode

- Which are the targets that could be run with make ?
\code
$ make help | grep visp
... visp_tests
... visp_demos
... visp_tutorials
... visp_examples
... visp_modules
... visp_doc
... visp_core
... visp_detection
... visp_robot
... visp_sensor
... visp_vision
... visp_vs
... visp_ar
... visp_mbt
... visp_tt
... visp_tt_mi
\endcode

- Which are the 3rd party libraries that are used in ViSP ?
To see which are the optional 3rd parties that are found during the configuration stage and that will be used by ViSP during the build you can have a look to the text file named ViSP-third-party.txt and located in \<binary_dir\>.

\section install_osx_brew_issues Kwown issues

- During OpenCV installation, if you get the following errors:
\code
$ brew install opencv3
Could not symlink lib/pkgconfig/isl.pc
/usr/local/lib/pkgconfig is not writable.

You can try again using:
  brew link isl
...
\endcode
it means maybe that you install other softwares without brew in /usr/local.
A work arround is to change the owner of the corresponding folder like:
\code
$ sudo chown {your-user-name} /usr/local/lib/pkgconfig
\endcode

- If you enter into troubles with the packages you install with brew, a good stating is to run:
\code
$ brew doctor
\endcode


- If you encounter the following issue
\code
$ ./modules/vision/testKeypoint-5
libpng warning: Application built with libpng-1.5.18 but running with 1.6.17
error: can't create a png read structure!
error reading png file
\endcode
It means that apparently there is a conflict between libpng version installed by "brew install opencv3" (1.6.17), and the one used by X11/XQuartz (1.5.18).
A work arround is to turn off libpng usage in ViSP. To configure and build again ViSP without png support:
\code
$ ccmake -DUSE_PNG=OFF ../ViSP
$ make -j4
\endcode
An other work arround option is to turn off X11 usage in ViSP. Display capabilities will be then the one from OpenCV. To this end, configure and build again ViSP without X11 support:
\code
$ ccmake -DUSE_X11=OFF ../ViSP
$ make -j4
\endcode

\section install_osx_brew_next Next tutorial

You are now ready to see the next \ref tutorial-getting-started that will show you how to use ViSP as a 3rd party to build your own project.

*/
